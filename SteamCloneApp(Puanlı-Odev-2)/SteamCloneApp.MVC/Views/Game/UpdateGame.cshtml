@model GameDisplayResponse
@{
    ViewData["Title"] = "UpdateGame";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-6">
        <input type="hidden" class="form-control" asp-for="Id" placeholder="Title giriniz..." />
        <div class="mb-3">
            <label asp-for="Title">Title</label>
            <input class="form-control" asp-for="Title" placeholder="Title giriniz..." />
        </div>
        <div class="mb-3">
            <label asp-for="Price">Fiyat</label>
            <input class="form-control" asp-for="Price" placeholder="Fiyat giriniz..." />
        </div>
        <div class="mb-3">
            <label asp-for="ReleaseAt">Çıkış tarihi</label>
            <input type="datetime-local" asp-for="ReleaseAt" class="form-control" />
        </div>
        <div class="mb-3">
            <label asp-for="DevelopedById">Yayımcı</label>
            <select class="form-select" asp-for="PublishedById" asp-items=@ViewBag.Publishers placeholder="Fiyat giriniz...">
                <option selected hidden>Publisher seçiniz</option>
            </select>
        </div>
        <div class="mb-3">
            <label asp-for="DevelopedById">Geliştirici Stüdyo</label>
            <select class="form-select" asp-for="DevelopedById" asp-items=@ViewBag.Developers placeholder="Fiyat giriniz...">
                <option selected hidden>Developer seçiniz</option>
            </select>
        </div>
    </div>
</div>
<div class="row">
    <div class="mb-3 col-12">
        <textarea class="form-control" rows="10" asp-for="Description" placeholder="Açıklama giriniz..."></textarea>
    </div>
</div>
<div class="row">
    <h4>Türler</h4>
    <div class="mb-3 col-12 d-flex flex-row">
        @foreach (var genre in ViewBag.genres)
        {
            <div class="form-check m-2">
                <input class="form-check-input" type="checkbox" value=" @genre.Id" name="genre" id=@($"flexCheck{genre.Id}") checked="@Model.Genres.Contains(genre.Name)">
                <label class="form-check-label" for=@($"flexCheck{genre.Id}")>
                    @genre.Name
                </label>
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="mb-3">
        <label asp-for="CoverUrl">Kapak Resmi</label>
        <input asp-for="CoverUrl" class="form-control" placeholder="Kapak resim url'i giriniz.." />
    </div>
</div>
<div class="row">
    <div class="input-group input-group-lg mb-3">
        <input id="url" class="form-control" placeholder="Resim url'i giriniz.." />
        <button type="button" class="btn btn-success " onclick="addImage()">Resim Ekle</button>
    </div>
</div>
<div>
    <ul id="imageList">
        @foreach (var imageUrl in ViewBag.ImageUrls)
        {
            <li class="fs-5 d-flex align-items-center mb-2">
                <button class="btn badge bg-danger text-light float-start me-2" onclick="removeImage(event)">&#x2715</button>
                <img src="@imageUrl" width="600" height="337" />
            </li>
        }
    </ul>
</div>

<button type="button" id="update" class="btn btn-outline-success">Güncelle</button>

@section Scripts{
    <script>
        const getUrlsFromUl = () => {
            let urls = [...document.querySelectorAll('#imageList li img')]
            return urls.map(p => p.src)

        }
        const getListItemAsString = (value) => {
            return `
                                           <li class="fs-5 d-flex align-items-center mb-2">
                                               <button class="btn badge bg-danger text-light float-start me-2" onclick="removeImage(event)">&#x2715</button>
                                               <img src="${value}" width="600" height="337" />
                                           </li>
                                           `
        }
        const addImage = () => {
            let input = document.getElementById('url')
            let ul = document.getElementById('imageList')

            ul.innerHTML = getListItemAsString(input.value) + ul.innerHTML
            input.value = ''
        }
        const removeImage = (event) => {
            event.cancelBubble = true
            let li = event.target.parentNode
            let ul = event.target.parentNode.parentNode
            ul.removeChild(li)
        }

        const getDataFromInputs = () => {
            let id = document.getElementById('Id').value
            let title = document.getElementById('Title').value
            let description = document.getElementById('Description').value
            let publishedById = document.getElementById('PublishedById').value
            let developedById = document.getElementById('DevelopedById').value
            let price = document.getElementById('Price').value
            let releaseAt = document.getElementById('ReleaseAt').value
            let coverUrl = document.getElementById('CoverUrl').value
            let array = [...document.getElementsByName(`genre`)]
            let checkedGenres = array.filter(p => p.checked)
            let genres = checkedGenres.map(p => p.value)
            let imageUrls = getUrlsFromUl()

            let data = {
                id,
                title,
                description,
                publishedById,
                developedById,
                price,
                releaseAt,
                genres,
                coverUrl,
                iconUrl: coverUrl,
                imageUrls
            }
            return data
        }
        $(document).ready(function () {
            $('#update').on('click', function () {
                $.ajax({
                    type: "POST",
                    url: "/game/updategame",
                    data: getDataFromInputs(),
                    success: function () {
                        alertify.success('Oyun Güncellendi')
                        window.location.href = '/game/gamesettings';
                    }
                })
            })
        })
    </script>
}